on_actions = {
	# Oil Production
	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@oil_in_warehouse_product > 4
					}
				}
				
				set_variable = {
					var = oil_product_negative
					value = 50
				}

				multiply_variable = {
					var = oil_product_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = oil_in_warehouse_product
    				amount = oil_product_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = oil
						amount = 5
					}
				}
				
				set_variable = {
					var = oil_product_negative
					value = 0
				}
			}
		}
	}

	# Oil II Production
	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@oil_in_warehouse_product_2 > 4
					}
				}
				
				set_variable = {
					var = oil_product_2_negative
					value = 50
				}

				multiply_variable = {
					var = oil_product_2_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = oil_in_warehouse_product_2
    				amount = oil_product_2_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = oil
						amount = 5
					}
				}
				
				set_variable = {
					var = oil_product_2_negative
					value = 0
				}
			}
		}
	}

	# Oil III Production
	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@oil_in_warehouse_product_3 > 4
					}
				}
				
				set_variable = {
					var = oil_product_3_negative
					value = 50
				}

				multiply_variable = {
					var = oil_product_3_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = oil_in_warehouse_product_3
    				amount = oil_product_3_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = oil
						amount = 5
					}
				}
				
				set_variable = {
					var = oil_product_3_negative
					value = 0
				}
			}
		}
	}

	# aluminium Production

	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@aluminium_in_warehouse_product > 4
					}
				}
				
				set_variable = {
					var = aluminium_product_negative
					value = 50
				}

				multiply_variable = {
					var = aluminium_product_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = aluminium_in_warehouse_product
    				amount = aluminium_product_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = aluminium
						amount = 5
					}
				}
				
				set_variable = {
					var = aluminium_product_negative
					value = 0
				}
			}
		}
	}

	# aluminium II Production
	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@aluminium_in_warehouse_product_2 > 4
					}
				}
				
				set_variable = {
					var = aluminium_product_2_negative
					value = 50
				}

				multiply_variable = {
					var = aluminium_product_2_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = aluminium_in_warehouse_product_2
    				amount = aluminium_product_2_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = aluminium
						amount = 5
					}
				}
				
				set_variable = {
					var = aluminium_product_2_negative
					value = 0
				}
			}
		}
	}

	# aluminium III Production
	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@aluminium_in_warehouse_product_3 > 4
					}
				}
				
				set_variable = {
					var = aluminium_product_3_negative
					value = 50
				}

				multiply_variable = {
					var = aluminium_product_3_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = aluminium_in_warehouse_product_3
    				amount = aluminium_product_3_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = aluminium
						amount = 5
					}
				}
				
				set_variable = {
					var = aluminium_product_3_negative
					value = 0
				}
			}
		}
	}

	# rubber Production

	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@rubber_in_warehouse_product > 4
					}
				}
				
				set_variable = {
					var = rubber_product_negative
					value = 50
				}

				multiply_variable = {
					var = rubber_product_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = rubber_in_warehouse_product
    				amount = rubber_product_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = rubber
						amount = 5
					}
				}
				
				set_variable = {
					var = rubber_product_negative
					value = 0
				}
			}
		}
	}

	# rubber II Production
	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@rubber_in_warehouse_product_2 > 4
					}
				}
				
				set_variable = {
					var = rubber_product_2_negative
					value = 50
				}

				multiply_variable = {
					var = rubber_product_2_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = rubber_in_warehouse_product_2
    				amount = rubber_product_2_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = rubber
						amount = 5
					}
				}
				
				set_variable = {
					var = rubber_product_2_negative
					value = 0
				}
			}
		}
	}

	# rubber III Production
	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@rubber_in_warehouse_product_3 > 4
					}
				}
				
				set_variable = {
					var = rubber_product_3_negative
					value = 50
				}

				multiply_variable = {
					var = rubber_product_3_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = rubber_in_warehouse_product_3
    				amount = rubber_product_3_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = rubber
						amount = 5
					}
				}
				
				set_variable = {
					var = rubber_product_3_negative
					value = 0
				}
			}
		}
	}

	# steel Production

	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@steel_in_warehouse_product > 4
					}
				}
				
				set_variable = {
					var = steel_product_negative
					value = 50
				}

				multiply_variable = {
					var = steel_product_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = steel_in_warehouse_product
    				amount = steel_product_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = steel
						amount = 5
					}
				}
				
				set_variable = {
					var = steel_product_negative
					value = 0
				}
			}
		}
	}

	# steel II Production
	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@steel_in_warehouse_product_2 > 4
					}
				}
				
				set_variable = {
					var = steel_product_2_negative
					value = 50
				}

				multiply_variable = {
					var = steel_product_2_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = steel_in_warehouse_product_2
    				amount = steel_product_2_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = steel
						amount = 5
					}
				}
				
				set_variable = {
					var = steel_product_2_negative
					value = 0
				}
			}
		}
	}

	# steel III Production
	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@steel_in_warehouse_product_3 > 4
					}
				}
				
				set_variable = {
					var = steel_product_3_negative
					value = 50
				}

				multiply_variable = {
					var = steel_product_3_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = steel_in_warehouse_product_3
    				amount = steel_product_3_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = steel
						amount = 5
					}
				}
				
				set_variable = {
					var = steel_product_3_negative
					value = 0
				}
			}
		}
	}

	# tungsten Production

	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@tungsten_in_warehouse_product > 4
					}
				}
				
				set_variable = {
					var = tungsten_product_negative
					value = 50
				}

				multiply_variable = {
					var = tungsten_product_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = tungsten_in_warehouse_product
    				amount = tungsten_product_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = tungsten
						amount = 5
					}
				}
				
				set_variable = {
					var = tungsten_product_negative
					value = 0
				}
			}
		}
	}

	# tungsten II Production
	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@tungsten_in_warehouse_product_2 > 4
					}
				}
				
				set_variable = {
					var = tungsten_product_2_negative
					value = 50
				}

				multiply_variable = {
					var = tungsten_product_2_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = tungsten_in_warehouse_product_2
    				amount = tungsten_product_2_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = tungsten
						amount = 5
					}
				}
				
				set_variable = {
					var = tungsten_product_2_negative
					value = 0
				}
			}
		}
	}

	# tungsten III Production
	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@tungsten_in_warehouse_product_3 > 4
					}
				}
				
				set_variable = {
					var = tungsten_product_3_negative
					value = 50
				}

				multiply_variable = {
					var = tungsten_product_3_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = tungsten_in_warehouse_product_3
    				amount = tungsten_product_3_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = tungsten
						amount = 5
					}
				}
				
				set_variable = {
					var = tungsten_product_3_negative
					value = 0
				}
			}
		}
	}

	# chromium Production

	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@chromium_in_warehouse_product > 4
					}
				}
				
				set_variable = {
					var = chromium_product_negative
					value = 50
				}

				multiply_variable = {
					var = chromium_product_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = chromium_in_warehouse_product
    				amount = chromium_product_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = chromium
						amount = 5
					}
				}
				
				set_variable = {
					var = chromium_product_negative
					value = 0
				}
			}
		}
	}

	# chromium II Production
	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@chromium_in_warehouse_product_2 > 4
					}
				}
				
				set_variable = {
					var = chromium_product_2_negative
					value = 50
				}

				multiply_variable = {
					var = chromium_product_2_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = chromium_in_warehouse_product_2
    				amount = chromium_product_2_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = chromium
						amount = 5
					}
				}
				
				set_variable = {
					var = chromium_product_2_negative
					value = 0
				}
			}
		}
	}

	# chromium III Production
	on_daily = {
		effect = {
			if = {
				limit = {
					
					check_variable = {
						var:num_equipment@chromium_in_warehouse_product_3 > 4
					}
				}
				
				set_variable = {
					var = chromium_product_3_negative
					value = 50
				}

				multiply_variable = {
					var = chromium_product_3_negative
					value = -1
				}
				
				
				########################################################

				add_equipment_to_stockpile = {
    				type = chromium_in_warehouse_product_3
    				amount = chromium_product_3_negative
    				# producer = ROOT
				}

				every_state = {
					limit = {
						is_controlled_by = ROOT
						is_capital = yes
					}
					add_resource = {
						type = chromium
						amount = 5
					}
				}
				
				set_variable = {
					var = chromium_product_3_negative
					value = 0
				}
			}
		}
	}

}